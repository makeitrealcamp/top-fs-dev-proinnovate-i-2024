name: ci
# como se va a disparar el pipeline
on:
  # Activa el flujo de trabajo cada vez que se realiza un push en la rama main
  push:
    branches: ['main']
  # Activa el flujo de trabajo cada vez que se realiza un pull request en la rama main, develop
  pull_request:
    branches: ['main', 'develop']

  # Permite ejecutar el flujo de trabajo de forma manual
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/example_prisma_test

    steps:
      # Paso 1: Descarga de dependencias
      - name: Checkout
        uses: actions/checkout@v3
      # Paso 2: Configurar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      # Paso 3: Instalación de dependencias
      - name: Install dependencies
        run: npm ci
      # Paso 4: Build
      - name: Build
        run: npm run build
      # run the migration in the test database
      - run: npm run db:push
      - run: npm run db:seed
      # Paso 5: Ejecución de tests
      - name: Run tests
        run: npm run test
